
use Magazin
go
begin tran
CREATE TABLE Category
(
Id_Category bigint IDENTITY(1,1)  not null,              --  Id категории
Name_category  varchar(200) not null,                        --  наименование  категории
PRIMARY KEY (Id_Category)
)          
go
CREATE TABLE Manufacturer
(
Id_Manufacturer bigint IDENTITY(1,1)  not null,          --  Id производителя
Phone char(50) null,                                  --  телефон
Country_origin varchar(200) not null,                  --  страна производитель  
Quantity_goods bigint null,                              --  количество товара
Logo varbinary(max) null,                             --  логотип 
Description_manufacturer text null,                   --  описание производителя
Name_manufacturer varchar(200) not null,               --  наименование производителя
Web varchar(200)null,                                  --  WEB сайт
PRIMARY KEY (Id_Manufacturer)                                 
)
go
CREATE TABLE Attributes
(
Id_Attributes bigint IDENTITY(1,1)  not null,            --  Id атрибута
Color char(50) null,                                  --  цвет
Volume char(200) null,                                 --  Объём
Memory bigint null,                                      --  Память  
Clock_speed char(200) null,                            --  Тактовая частота 
Weight_Product bigint null,                              --  Вес продукта 
Production_date datetime null,                            --  Дата производства
PRIMARY KEY (Id_Attributes)                            
)
go
CREATE TABLE Product
(
Id_Product bigint IDENTITY(1,1) not null,                --  Id товара
Id_Category bigint not null,                             --  Id категории
Id_Manufacturer bigint not null,                         --  Id Производителя
Name_product varchar(200) not null,                   --  Наименование продукта 
Description_product text null,                        --  Описание продукта
Image_product varbinary(max) null,                    --  Изображение продукта
Model varchar (200) not null,                          --  Модель
Price float(50) not null,                             --  Цена
Availability varchar(200) not null,                    --  Доступность 
Quantity varchar(200)not null,                         --  Количество 
Id_Attributes bigint not null,                           --  Id Атрибута 
Discount char(200) null ,                              --  Скидка
constraint PK_Product PRIMARY KEY (Id_Product),-- первичный ключь Id_Product , его имя  PK_Product      
constraint FK_Product_Id_Category FOREIGN KEY (Id_Category) REFERENCES Category (Id_Category),-- внешний ключ присоединяется к  столбцу Id_Category таблица Category. Его имя   FK_Product_Id_Category 
constraint FK_Product_Id_Manufacturer FOREIGN KEY (Id_Manufacturer) REFERENCES Manufacturer (Id_Manufacturer),-- внешний ключ присоединяется к  столбцу Id_Manufacturer таблица Manufacturer. Его имя  FK_Product_Id_Manufacturer
constraint FK_Product_Id_Attributes FOREIGN KEY (Id_Attributes) REFERENCES Attributes (Id_Attributes)-- внешний ключ присоединяется к  столбцу Id_Attributes таблица Attributes. Его имя  FK_Product_Id_Attributes
)
go
CREATE TABLE Buyer_status
(
Id_Buyer_status bigint IDENTITY(1,1)  not null,           --  Id Статус покупателя 
Name_buyer_status varchar(200) not null,                --  наименование статуса покупателя
PRIMARY KEY (Id_Buyer_status)
)
go
CREATE TABLE Buyer_category
(
Id_Buyer_category bigint IDENTITY(1,1)  not null,         --  Id категория покупателя
Buyer_category varchar(200)not null,                    --  категория покупателя                                   
PRIMARY KEY (Id_Buyer_category)                            
)
go
CREATE TABLE Contact_details
(
Id_Contact_details bigint IDENTITY(1,1)  not null,        --  Id Контактные данные
Email varchar(200) null,                                --  Электронный адрес
Fax varchar(200) null,                                          --  Факс
Postal_address varchar(200) null,                               --  Почтовый адрес 
Country_code varchar(200) null,                                 --  Код города                       
Home_phone varchar(200) null,                                   --  домашний телефон
Mobil_phone varchar(200) null,                                  --  мобильны телефон
City_cod  varchar(200) null,                                    --  код города
PRIMARY KEY (Id_Contact_details)                            
)
go
CREATE TABLE Buyer
(
Id_buyer bigint IDENTITY(1,1)  not null,                  --  Id покупателя
Id_Buyer_category bigint not null,                        --  Id категория покупателя
Id_Contact_details bigint not null,                       --  Id Контактные данные
Id_Buyer_status bigint not null,                          --  Id Статус покупателя 
Login_buyer varchar(200) null,                          --  логин покупателя
Password_buyer varchar(200) null,                       --  пароль покупателя
Discount_buyer bigint null,                               --  Скидка для покупателя
Country varchar(200)not null,                           --  Страна 
City varchar(200) not null,                             --  Город 
Address_buyer varchar(200) not null,                    --  Адрес покупателя(улица...)  
constraint PK_Buyer PRIMARY KEY (Id_buyer),-- первичный ключь Id_buyer , его имя  PK_Buyer 
constraint FK_Buyer_Id_Buyer_category FOREIGN KEY (Id_Buyer_category ) REFERENCES Buyer_category (Id_Buyer_category),-- внешний ключ присоединяется к  столбцу Id_Buyer_category таблица Buyer_category . Его имя  FK_Buyer_Id_Buyer_category
constraint FK_Buyer_Id_Contact_details FOREIGN KEY (Id_Contact_details) REFERENCES Contact_details (Id_Contact_details),-- внешний ключ присоединяется к  столбцу Id_Contact_details таблица Contact_details. Его имя  FK_Buyer_Id_Contact_details
constraint FK_Buyer_Id_Buyer_status FOREIGN KEY (Id_Buyer_status) REFERENCES Buyer_status (Id_Buyer_status)-- внешний ключ присоединяется к  столбцу Id_Buyer_status таблица Buyer_status. Его имя  FK_Buyer_Id_Buyer_status                                
)
go
CREATE TABLE Order_status1
(
Id_Order_status bigint IDENTITY(1,1)  not null,           --  Id Статус заказа
Name_order_status varchar(200) not null,                --  наименование статуса заказа
PRIMARY KEY (Id_Order_status)
)
go
CREATE TABLE Orders1
(
Id_Order bigint IDENTITY(1,1)  not null,                  --  Id заказа
Id_Order_status bigint not null,                          --  Id Статус товара
Id_Product bigint not null,                               --  Id продукта
Id_buyer bigint not null,                                 --  Id покупателя
Order_price float(50) not null,                        --  цена заказа
Delivery_method varchar(200) not null,                 --  Способ доставки
Payment_methodid varchar(200) not null,                 --  способ оплаты                                             --  
Comments text null,                                    --  комментарии
Order_date datetime not null                               --  дата заказа
constraint PK_Orders1 PRIMARY KEY (Id_Order), -- первичный ключь Id_Order , его имя  PK_Orders1    
constraint FK_Orders1_Id_Order_status FOREIGN KEY (Id_Order_status) REFERENCES Order_status1 (Id_Order_status),-- внешний ключ присоединяется к  столбцу Id_Order_status таблица Order_status1. Его имя   FK_Orders1_Id_Order_status
constraint FK_Orders1_Id_Product FOREIGN KEY (Id_Product) REFERENCES Product (Id_Product),-- внешний ключ присоединяется к  столбцу Id_Product таблица Product. Его имя  FK_Orders1_Id_Product 
constraint FK_Orders1_Id_buyer FOREIGN KEY (Id_buyer) REFERENCES Buyer (Id_buyer)-- внешний ключ присоединяется к  столбцу Id_buyer таблица Buyer. Его имя  FK_Orders1_Id_buyer 
)
go
CREATE TABLE Purchase
(
Id_Purchase bigint identity (1,1) not null,               -- Id_покупки
Id_Order bigint not null,                                 -- Id_Заявки 
Id_Product bigint not null,                               -- Id_Продукта
constraint PK_Purchase PRIMARY KEY clustered(Id_Purchase),-- первичный ключь Id_Purchase 
constraint FK_Purchase_Id_Order FOREIGN KEY (Id_Order) REFERENCES Orders1 (Id_Order),-- внешний ключ присоединяется к  столбцу Id_Order таблица FK_Purchase_Id_Order
constraint FK_Purchase_Id_Product FOREIGN KEY (Id_Product) REFERENCES Product (Id_Product)-- внешний ключ присоединяется к  столбцу Id_Product таблица FK_Purchase_Id_Product
 )
 --rollback
commit
go

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   tp                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ad  Q  б            я  э  ь  ы  ъ  щ  ш  ч  ц  х  ф  у  т  с  р  п  о  н  м  л  к  й  и  з  ж  е  д  г  в  б  Х  Ю  Э  Ь  Ы  Ъ  Щ  Ш  О  Н  М  Л  К  Й  З  Е  Г  В                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       create table @t (id bigint not nu11                             i  